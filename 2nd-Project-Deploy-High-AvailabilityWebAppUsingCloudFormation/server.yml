Description: Udacity Cloud DevOps ( High Availability WebApp)

Parameters:
  Environment:
    Description: Environment name, used as a prefix for resources
    Type: String

  Environment:
    Description: Environment name, used for resources tagging
    Type: String

Resources:

  UdacityS3ReadOnlyEC2:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  ProfileWithRolesForApp:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref UdacityS3ReadOnlyEC2

  WebAppServer:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://mybucketname/project.zip .
          unzip -o project.zip
      ImageId: ami-005de95e8ff495156
      IamInstanceProfile: !Ref ProfileWithRolesForApp
      SecurityGroups:
      - Fn::ImportValue:
          !Sub "${Environment}-AppSecurityGroupID"
      InstanceType: t3.small
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: / # physical file path check.
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 7
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${Environment}-VPCID" 

  WebAppServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub ${Environment}-PRIV-NETS
      LaunchConfigurationName: !Ref WebAppServer
      MinSize: '2'
      MaxSize: '4'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
      Tags:
        - Key: Name
          Value: EC2-Instance
          PropagateAtLaunch: true
        - Key: Environment
          Value: !Ref Environment
          PropagateAtLaunch: true

  WebAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub ${Environment}-PUB1-SN
      - Fn::ImportValue: !Sub ${Environment}-PUB2-SN
      SecurityGroups:
      - Fn::ImportValue: !Sub ${Environment}-LBSecurityGroupID
      Tags:
        - Key: Name
          Value: Load Balancer
        - Key: Environment
          Value: !Ref Environment

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn: !Ref WebAppLoadBalancer
      Port: '80'
      Protocol: HTTP

  LoadBalancerListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1


  WebServerCPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref WebAppServerGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 75.0

  WebServerRequestCountPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref WebAppServerGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ALBRequestCountPerTarget
          ResourceLabel: !Join
            - '/'
            - - !GetAtt WebAppLoadBalancer.LoadBalancerFullName
              - !GetAtt WebAppTargetGroup.TargetGroupFullName
        TargetValue: 3


Outputs:

  DNS:
    Description: The website URL
    Value:
      !Sub
        - 'http://${DNSName}'
        - {DNSName: !GetAtt 'WebAppLoadBalancer.DNSName'}
    Export:
      Name: !Sub "${Environment}-SiteURL"